---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by SZS.
--- DateTime: 16.04.2022 13:29
---

local navigationStaticSegment
if not navigationStaticSegment then
    -- static function segment
    navigationDirectSide = { north = 0, east = 1, south = 2, west = 3, negZ = 0, posX = 1, posZ = 2, negX = 3 }
    navigationTurn = { left = -1, forward = 0, right = 1, around = 2 }
    navigationStaticSegment = 1
end

local navigation = {}

-- rotation 0 neg z, 1 pos x, 2 pos z, 3 neg x
navigation.position = { x = 0, y = 0, z = 0, r = 0 }

navigation.rotationTable = { [0] = 'z', [1] = 'x', [2] = 'z', [3] = 'x' }
navigation.directionTable = { [0] = -1, [1] = 1, [2] = 1, [3] = -1 }
navigation.rotationFormat = { [0] = 'north', [1] = 'east', [2] = 'south', [3] = 'west' }

function navigation:getNextPosition(turn, x, y, z, r)
    if not x then
        x, y, z, r = self.position.x, self.position.y, self.position.z, self.position.r
    end
    turn = (turn + r) % 4
    if turn == navigationDirectSide.negZ then
        z = z - 1
    elseif turn == navigationDirectSide.posZ then
        z = z + 1
    elseif turn == navigationDirectSide.negX then
        x = x - 1
    elseif turn == navigationDirectSide.posX then
        x = x + 1
    end
    return x, y, z
end

function navigation:up()
    self.position.y = self.position.y + 1
end

function navigation:down()
    self.position.y = self.position.y - 1
end

function navigation:turnRight()
    self.position.r = self.position.r + 1
end

function navigation:turnLeft()
    self.position.r = self.position.r - 1
end

function navigation:forward()
    self.position.r = self.position.r % 4
    self.position[self.rotationTable[self.position.r]] = self.position[self.rotationTable[self.position.r]] +
            self.directionTable[self.position.r]
end

function navigation:back()
    self.position.r = self.position.r % 4
    self.position[self.rotationTable[self.position.r]] = self.position[self.rotationTable[self.position.r]] -
            self.directionTable[self.position.r]
end

function navigation:_getRotationFormat()
    self.position.r = self.position.r % 4
    return self.rotationFormat[self.position.r]
end

function navigation:setPosition(x, z, y, stringRotation)
    self.position.x = x
    self.position.z = z
    self.position.y = y
    for k, v in pairs(self.rotationFormat) do
        if v == stringRotation then
            self.position.r = k
            return
        end
    end
    print('bad argument')
    os.exit()
end

function navigation:getPosition()
    return self.position.x, self.position.y, self.position.z, self.position.r
end

function navigation:calculateRotation(targetDirection)
    result = ((targetDirection - self.position.r) + 4) % 4
    return result
end

function navigation.toString(_self)
    return '[' .. _self.position.x .. ', ' .. _self.position.z .. ', ' .. _self.position.y .. ', ' .. _self:_getRotationFormat() .. ']'
end

setmetatable(navigation, { __tostring = navigation.toString })

return navigation